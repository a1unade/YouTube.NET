name: Backend CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
 
  codeql-analysis:
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build:
    runs-on: ubuntu-latest
    needs: codeql-analysis

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: |
          cd backend/YouTube
          dotnet restore

      - name: Build the project
        run: |
          cd backend/YouTube
          dotnet build --no-restore /p:RunAnalyzersDuringBuild=true /p:TreatWarningsAsErrors=true

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: |
          cd backend/YouTube
          dotnet restore

      - name: Run Tests with Coverage Collection
        run: |
          cd backend/YouTube
          dotnet test --no-build --verbosity detailed --collect:"XPlat Code Coverage" --settings ../../.github/coverlet.runsettings

      - name: Convert coverage to lcov
        run: |
          cd backend/YouTube
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator -reports:"**/TestResults/**/*.xml" -targetdir:coveragereport -reporttypes:lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: backend
          files: coveragereport/*.lcov
          token: ${{ secrets.CODECOV_TOKEN }}
          
          
