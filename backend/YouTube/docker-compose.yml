version: '3.9'

services:
  webapi:
    build:
      context: .
      dockerfile: YouTube.WebAPI/Dockerfile 
    container_name: Youtube.WebApi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - S3Storage_AccessKey=minioadmin
      - S3Storage_SecretKey=minioadmin
      - S3Storage_Endpoint=minio:9000
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - REDIS_CONNECTION_STRING=redis:6379
      - PaymentService__GrpcEndpoint=http://payment:8085
    depends_on:
      - db
      - payment_db 
      - redis
      - minio
      - rabbit
    ports:
      - "8080:8080"
    networks:
      - youtube_network
    volumes:
      - data_protection:/root/.aspnet/DataProtection-Keys

  busapi:
    build:
      context: .
      dockerfile: YouTube.BusAPI/Dockerfile 
    container_name: Youtube.BusApi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitOptions_Username=guest
      - RabbitOptions_Password=guest
      - RabbitOptions_Hostname=rabbit
      - REDIS_CONNECTION_STRING=redis:6379
    depends_on:
      - db
      - redis
      - minio
      - rabbit  
    ports:
      - "8090:8090"
    networks:
      - youtube_network
    volumes:
      - data_protection:/root/.aspnet/DataProtection-Keys

  payment:
    build:
      context: .
      dockerfile: YouTube.Payment/Dockerfile
    container_name: Youtube.Payment
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PaymentDb=Host=payment_db;Port=5432;Username=postgres;Password=youtube;Database=payment_db;Pooling=true;Timeout=30;CommandTimeout=30
      - ASPNETCORE_URLS=http://+:8085
    depends_on:
      payment_db:
        condition: service_healthy
    ports:
      - "8085:8085"
    networks:
      - youtube_network

  db:
    image: postgres:16
    container_name: Youtube.Postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: youtube
      POSTGRES_DB: youtube 
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - youtube_network

  payment_db:
    image: postgres:16
    container_name: Youtube.PaymentDb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: youtube
      POSTGRES_DB: payment_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d payment_db"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 30s
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - youtube_network

  redis:
    container_name: Youtube.Redis
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - youtube_network

  minio:
    image: quay.io/minio/minio
    container_name: Youtube.MinioS3
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - youtube_network

  rabbit: 
    image: rabbitmq:3-management
    container_name: Youtube.RabbitMq
    ports:
      - "5672:5672"
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - youtube_network

volumes:
  db_data:
  payment_db_data: 
  minio_data:
  data_protection:

networks:
  youtube_network:
    driver: bridge
